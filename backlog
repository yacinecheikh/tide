add non-ast rendering (notification/toasts,...)
-> refactor: multiple screens (Display) to split the screen into menus
(subscreens are maintainted by states, but interact with a main display)

ex:
-Display(screen)
--menu(display, position, offset)
(rendering: Camera will be merged with sub-displays -> first display is just a base for other displays to use)



add shortcuts to select items and navigate in the AST
(ex: enter to focus on root, wasd to move up/down or upper level/lower level

add dom-like child+(text)element tree
(to allow comments to have sub elements for instance)
(main use case: mix text and nodes)

(for now: let UI navigation for later, can override behaviour as needed)


multi-view rendering:
-widgets
-subscreens for:
file selector, auto-complete,... (substate inputs)
(should handle most events by controlled redirection)


add hook for multiple node rendering to display
(ast is the main node, but not the only one)
(should also support temporary nodes)

HUD outside of AST
(ex: framerate watcher top right of the screen)
(currently impossible since Display can only display 1 element and AST takes the main spot with (0, 0))
(ex: notifications toasts)

DOM-like text+children mixing



later:
-auto-replace rendering of complex or long expressions/blocks with simpler docstring
-add custom node type support (ex: literals for arrays, linked lists, hash tables,...)
-visual indicators like *, <-, numbers,... in different colors to indicate bookmarks
(ex: write in red the bookmark id/number besides the first/middle line of the node)
-> requires complex rendering instructions (multiple renderings per line)
-> for now: cyan backgrounds for bookmark headers


Node:
-add optional footer along with headers
-mix nodes and texts in children content


bookmarks:
behaviour:
-erase previous bookmark when defining a new one
-allow multiple bookmarks for organized numbered nodes
(persistent and automated bookmarks)
(local or unique bookmarks to navigate)
(could be used like goto labels, not necessarily with numbers)


